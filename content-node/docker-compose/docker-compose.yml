services:
  caddy:
    image: caddy:2.9
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    command: >
      sh -c 'echo "{
        :80 {
          reverse_proxy content-node:5000 {
            header_up X-Real-IP {remote}
            header_up X-Forwarded-Proto {scheme}
          }
        }
      }" > /etc/caddy/Caddyfile && caddy run --config /etc/caddy/Caddyfile'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped
    depends_on:
      - content-node
    networks:
      - content_network

  content-node:
    image: earthfast/content-node:09347bad740a7881915b31143458482abb1cb75b
    environment:
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - DATABASE_DIR=/data/database
      - ETH_RPC_ENDPOINT=${RPC_URL}
      - HOSTING_CACHE_DIR=/data/hosting_cache
      - HTTP_PORT=5000
      - NODE_ID=${NODE_ID}
    volumes:
      - ${DATABASE_DIR}:/data/database
      - ${HOSTING_CACHE_DIR}:/data/hosting_cache
    ports:
      - "127.0.0.1:5000:5000"
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - content_network

  watchtower:
    profiles:
      - autoupdate
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_POLL_INTERVAL=60
    command: --interval 60 --cleanup --include-restarting
    restart: unless-stopped
    networks:
      - content_network

networks:
  content_network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
