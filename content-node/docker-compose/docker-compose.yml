services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./webroot:/var/www/certbot
      - ./nginx-entrypoint.sh:/docker-entrypoint.d/40-config-nginx.sh:ro
    environment:
      - SERVER_NAME=${SERVER_NAME}
      - SETUP_SSL=${SETUP_SSL:-false}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./webroot:/var/www/certbot
    entrypoint: sh
    command: >
      -c '
      if [ "$SETUP_SSL" != "true" ]; then
        echo "SSL setup not enabled, skipping certbot"
        exit 0
      fi;
      certbot certonly --webroot --webroot-path=/var/www/certbot 
      --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email 
      --force-renewal -d ${SERVER_NAME}'
    environment:
      - SETUP_SSL=${SETUP_SSL:-false}
    depends_on:
      - nginx
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  cert-handler:
    image: docker:cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/etc/letsencrypt:ro
    entrypoint: sh
    command: >
      -c '
      if [ "$SETUP_SSL" != "true" ]; then
        echo "SSL setup not enabled, skipping cert handler"
        exit 0
      fi;
      while ! test -f /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem; do
        sleep 1;
      done;
      sleep 1;
      NGINX_CONTAINER=$$(docker ps -q -f name=nginx); docker restart $$NGINX_CONTAINER;
      echo "Nginx restarted successfully"'
    environment:
      - SETUP_SSL=${SETUP_SSL:-false}
      - SERVER_NAME=${SERVER_NAME}
    depends_on:
      certbot:
        condition: service_completed_successfully

  content-node:
    image: earthfast/content-node:09347bad740a7881915b31143458482abb1cb75b
    environment:
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - DATABASE_DIR=/data/database
      - ETH_RPC_ENDPOINT=${RPC_URL}
      - HOSTING_CACHE_DIR=/data/hosting_cache
      - HTTP_PORT=5000
      - NODE_ID=${NODE_ID}
    volumes:
      - ${DATABASE_DIR}:/data/database
      - ${HOSTING_CACHE_DIR}:/data/hosting_cache
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    profiles:
      - autoupdate
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_POLL_INTERVAL=60
    command: --interval 60 --cleanup --include-restarting
    restart: unless-stopped

volumes:
  letsencrypt:
